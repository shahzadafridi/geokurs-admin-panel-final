<?php

namespace DoctrineProxies\__CG__\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Product extends \Entity\Product implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Entity\\Product' . "\0" . 'id', '' . "\0" . 'Entity\\Product' . "\0" . 'name', '' . "\0" . 'Entity\\Product' . "\0" . 'slug', '' . "\0" . 'Entity\\Product' . "\0" . 'price', '' . "\0" . 'Entity\\Product' . "\0" . 'currency', '' . "\0" . 'Entity\\Product' . "\0" . 'sku', '' . "\0" . 'Entity\\Product' . "\0" . 'brand', '' . "\0" . 'Entity\\Product' . "\0" . 'reward_points', '' . "\0" . 'Entity\\Product' . "\0" . 'stock_status', '' . "\0" . 'Entity\\Product' . "\0" . 'description', '' . "\0" . 'Entity\\Product' . "\0" . 'introduction', '' . "\0" . 'Entity\\Product' . "\0" . 'image', '' . "\0" . 'Entity\\Product' . "\0" . 'is_new_arrival', '' . "\0" . 'Entity\\Product' . "\0" . 'is_featured', '' . "\0" . 'Entity\\Product' . "\0" . 'is_special', '' . "\0" . 'Entity\\Product' . "\0" . 'created_at'];
        }

        return ['__isInitialized__', '' . "\0" . 'Entity\\Product' . "\0" . 'id', '' . "\0" . 'Entity\\Product' . "\0" . 'name', '' . "\0" . 'Entity\\Product' . "\0" . 'slug', '' . "\0" . 'Entity\\Product' . "\0" . 'price', '' . "\0" . 'Entity\\Product' . "\0" . 'currency', '' . "\0" . 'Entity\\Product' . "\0" . 'sku', '' . "\0" . 'Entity\\Product' . "\0" . 'brand', '' . "\0" . 'Entity\\Product' . "\0" . 'reward_points', '' . "\0" . 'Entity\\Product' . "\0" . 'stock_status', '' . "\0" . 'Entity\\Product' . "\0" . 'description', '' . "\0" . 'Entity\\Product' . "\0" . 'introduction', '' . "\0" . 'Entity\\Product' . "\0" . 'image', '' . "\0" . 'Entity\\Product' . "\0" . 'is_new_arrival', '' . "\0" . 'Entity\\Product' . "\0" . 'is_featured', '' . "\0" . 'Entity\\Product' . "\0" . 'is_special', '' . "\0" . 'Entity\\Product' . "\0" . 'created_at'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Product $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', []);

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug($slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', [$slug]);

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', []);

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', [$price]);

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrency', []);

        return parent::getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrency($currency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrency', [$currency]);

        return parent::setCurrency($currency);
    }

    /**
     * {@inheritDoc}
     */
    public function getSku()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSku', []);

        return parent::getSku();
    }

    /**
     * {@inheritDoc}
     */
    public function setSku($sku)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSku', [$sku]);

        return parent::setSku($sku);
    }

    /**
     * {@inheritDoc}
     */
    public function getBrand()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBrand', []);

        return parent::getBrand();
    }

    /**
     * {@inheritDoc}
     */
    public function setBrand($brand)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBrand', [$brand]);

        return parent::setBrand($brand);
    }

    /**
     * {@inheritDoc}
     */
    public function getRewardPoints()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRewardPoints', []);

        return parent::getRewardPoints();
    }

    /**
     * {@inheritDoc}
     */
    public function setRewardPoints($reward_points)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRewardPoints', [$reward_points]);

        return parent::setRewardPoints($reward_points);
    }

    /**
     * {@inheritDoc}
     */
    public function getStockStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStockStatus', []);

        return parent::getStockStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStockStatus($stock_status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStockStatus', [$stock_status]);

        return parent::setStockStatus($stock_status);
    }

    /**
     * {@inheritDoc}
     */
    public function getIntroduction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIntroduction', []);

        return parent::getIntroduction();
    }

    /**
     * {@inheritDoc}
     */
    public function setIntroduction($introduction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIntroduction', [$introduction]);

        return parent::setIntroduction($introduction);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage($image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$image]);

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function isNewArrival()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isNewArrival', []);

        return parent::isNewArrival();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsNewArrival($is_new_arrival)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsNewArrival', [$is_new_arrival]);

        return parent::setIsNewArrival($is_new_arrival);
    }

    /**
     * {@inheritDoc}
     */
    public function isFeatured()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isFeatured', []);

        return parent::isFeatured();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsFeatured($is_featured)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsFeatured', [$is_featured]);

        return parent::setIsFeatured($is_featured);
    }

    /**
     * {@inheritDoc}
     */
    public function isSpecial()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSpecial', []);

        return parent::isSpecial();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsSpecial($is_special)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsSpecial', [$is_special]);

        return parent::setIsSpecial($is_special);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($created_at)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$created_at]);

        return parent::setCreatedAt($created_at);
    }

}
